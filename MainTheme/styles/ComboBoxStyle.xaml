<ResourceDictionary 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:MainTheme" 
	xmlns:Themes=
"clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../brushes/solidandgradiant.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle" 
				Value="true"/>
		<Setter Property="IsTabStop" 
				Value="false"/>
		<Setter Property="Focusable" 
				Value="false"/>
		<Setter Property="ClickMode" 
				Value="Press"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border 
						x:Name="templateRoot" 
						SnapsToDevicePixels="true" 
						Background="{StaticResource 
							ComboBox.Static.Background}"
						BorderThickness="{TemplateBinding BorderThickness}"
						BorderBrush="{StaticResource ComboBox.Static.Border}" 
						CornerRadius='12'>
						<Border 
							x:Name="splitBorder" 
							Width="{DynamicResource 
							{x:Static 
							 SystemParameters.VerticalScrollBarWidthKey}}" 
							SnapsToDevicePixels="true" 
							Margin="0" 
							HorizontalAlignment="Right" 
							BorderThickness="1" 
							BorderBrush="Transparent">
							<Path 
								x:Name="arrow" 
								VerticalAlignment="Center"
								Margin="0" 
								HorizontalAlignment="Center" 
								Fill="{StaticResource ComboBox.Static.Glyph}" 
								Data="F1 M 0,0 L 2.667,2.66665 L
								5.3334,0 L 5.3334,-1.78168 L 2.6667
								,0.88501 L0,-1.78168 L0,0 Z"/>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition 
									Binding="{Binding IsEditable, 
									RelativeSource={RelativeSource 
									AncestorType={x:Type ComboBox}}}" 
									Value="true"/>
								<Condition 
									Binding="{Binding IsMouseOver, 
									RelativeSource={RelativeSource Self}}"
									Value="false"/>
								<Condition 
									Binding="{Binding IsPressed, 
									RelativeSource={RelativeSource Self}}" 
									Value="false"/>
								<Condition 
									Binding="{Binding IsEnabled,
									RelativeSource={RelativeSource Self}}" 
									Value="true"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" 
									TargetName="templateRoot" 
									Value="{StaticResource 
									 ComboBox.Static.Background}"/>
							<Setter Property="BorderBrush" 
									TargetName="templateRoot" 
									Value="transparent"/>
							<Setter Property="Background" 
									TargetName="splitBorder" 
									Value="{StaticResource 
									 ComboBox.Static.Background}"/>
							<Setter Property="BorderBrush" 
									TargetName="splitBorder" 
									Value="transparent"/>
						</MultiDataTrigger>
						<Trigger Property="IsMouseOver" 
								 Value="true">
							<Setter Property="Fill" 
									TargetName="arrow" 
									Value="{StaticResource 
									 ComboBox.MouseOver.Glyph}"/>
							<Setter Property="BorderBrush" 
									TargetName="templateRoot"
									Value="{StaticResource 
									 ComboBox.Static.Background}"/>
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition 
									Binding="{Binding IsMouseOver,
									RelativeSource={RelativeSource Self}}" 
									Value="true"/>
								<Condition 
									Binding="{Binding IsEditable,
									RelativeSource={RelativeSource 
									AncestorType={x:Type ComboBox}}}"
									Value="false"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" 
									TargetName="templateRoot"
									Value="{StaticResource 
									 ComboBox.Static.Background}"/>
							<Setter Property="BorderBrush" 
									TargetName="templateRoot" 
									Value="{StaticResource 
									 ComboBox.Static.Background}"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition
									Binding="{Binding IsMouseOver,
									RelativeSource={RelativeSource Self}}"
									Value="true"/>
								<Condition 
									Binding="{Binding IsEditable,
									RelativeSource={RelativeSource
									AncestorType={x:Type ComboBox}}}"
									Value="true"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" 
									TargetName="templateRoot"
									Value="{StaticResource 
									 ComboBox.Static.Background}"/>
							<Setter Property="BorderBrush" 
									TargetName="templateRoot"
									Value="transparent"/>
							<Setter Property="Background" 
									TargetName="splitBorder" 
									Value="{StaticResource 
									 ComboBox.Static.Background}"/>
							<Setter Property="BorderBrush" 
									TargetName="splitBorder"
									Value="transparent"/>
						</MultiDataTrigger>
						<Trigger Property="IsPressed"
								 Value="true">
							<Setter Property="Fill" 
									TargetName="arrow"
									Value="{StaticResource 
									 ComboBox.Pressed.Glyph}"/>
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition 
									Binding="{Binding IsPressed, 
									RelativeSource={RelativeSource Self}}"
									Value="true"/>
								<Condition 
									Binding="{Binding IsEditable,
									RelativeSource={RelativeSource
									AncestorType={x:Type ComboBox}}}"
									Value="false"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" 
									TargetName="templateRoot"
									Value="{StaticResource 
									 ComboBox.Static.Background}"/>
							<Setter Property="BorderBrush"
									TargetName="templateRoot" 
									Value="transparent"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition 
									Binding="{Binding IsPressed,
									RelativeSource={RelativeSource Self}}"
									Value="true"/>
								<Condition 
									Binding="{Binding IsEditable,
									RelativeSource={RelativeSource
									AncestorType={x:Type ComboBox}}}" 
									Value="true"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background"
									TargetName="templateRoot"
									Value="{StaticResource 
									 ComboBox.Static.Background}"/>
							<Setter Property="BorderBrush"
									TargetName="templateRoot"
									Value="transparent"/>
							<Setter Property="Background" 
									TargetName="splitBorder" 
									Value="{StaticResource 
									 ComboBox.Static.Background}"/>
							<Setter Property="BorderBrush" 
									TargetName="splitBorder"
									Value="transparent"/>
						</MultiDataTrigger>
						<Trigger Property="IsEnabled"
								 Value="false">
							<Setter Property="Fill"
									TargetName="arrow"
									Value="{StaticResource 
									 ComboBox.Disabled.Glyph}"/>
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition
									Binding="{Binding IsEnabled,
									RelativeSource={RelativeSource Self}}"
									Value="false"/>
								<Condition
									Binding="{Binding IsEditable,
									RelativeSource={RelativeSource
									AncestorType={x:Type ComboBox}}}" 
									Value="false"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" 
									TargetName="templateRoot"
									Value="{StaticResource 
									 ComboBox.Static.Background}"/>
							<Setter Property="BorderBrush" 
									TargetName="templateRoot" 
									Value="{StaticResource 
									 ComboBox.Disabled.Border}"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition 
									Binding="{Binding IsEnabled,
									RelativeSource={RelativeSource Self}}"
									Value="false"/>
								<Condition 
									Binding="{Binding IsEditable,
									RelativeSource={RelativeSource
									AncestorType={x:Type ComboBox}}}"
									Value="true"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" 
									TargetName="templateRoot"
									Value="{StaticResource 
									 ComboBox.Static.Background}"/>
							<Setter Property="BorderBrush" 
									TargetName="templateRoot"
									Value="{StaticResource 
									 ComboBox.Disabled.Editable.Border}"/>
							<Setter Property="Background" 
									TargetName="splitBorder"
									Value="{StaticResource 
									 ComboBox.Static.Background}"/>
							<Setter 
								Property="BorderBrush" 
								TargetName="splitBorder"
								Value="{StaticResource 
								 ComboBox.Disabled.Editable.Button.Border}"/>
						</MultiDataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
		<Grid x:Name="templateRoot" SnapsToDevicePixels="true">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition 
					MinWidth="{DynamicResource {x:Static 
					SystemParameters.VerticalScrollBarWidthKey}}"
					Width="0"/>
			</Grid.ColumnDefinitions>
			<Popup x:Name="PART_Popup"
				   AllowsTransparency="true" 
				   Grid.ColumnSpan="2" 
				   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, 
				RelativeSource={RelativeSource TemplatedParent}}" 
				   Margin="1" 
				   Placement="Bottom" Opacity=".5">
				<Themes:SystemDropShadowChrome 
					x:Name="shadow"
					Color="Transparent"
					MaxHeight="{TemplateBinding MaxDropDownHeight}"
					MinWidth="{Binding ActualWidth,
					ElementName=templateRoot}">
					<Border x:Name="dropDownBorder"
							BorderBrush="{StaticResource 
							ComboBox.Static.Background}" 
							BorderThickness="1" 
							Background="{StaticResource 
							ComboBox.Static.Background}"
							CornerRadius="12" 
							 >
						<ScrollViewer x:Name="DropDownScrollViewer" VerticalScrollBarVisibility="Hidden" >
							<Grid x:Name="grid"
								  RenderOptions.ClearTypeHint="Enabled">
								<Canvas x:Name="canvas" 
										HorizontalAlignment="Left"
										Height="0"
										VerticalAlignment="Top" 
										Width="0"
										>
									<Rectangle
										x:Name="opaqueRect" 
										RadiusX="12"
										RadiusY="12"
										Fill="{StaticResource 
										ComboBox.Static.Background}"
										Height="{Binding ActualHeight, 
										ElementName=dropDownBorder}" 
										Width="{Binding ActualWidth, 
										ElementName=dropDownBorder}" />
								</Canvas>
								<ItemsPresenter 
									x:Name="ItemsPresenter" 
									
									KeyboardNavigation.DirectionalNavigation=
									"Contained"
									SnapsToDevicePixels="{TemplateBinding 
									SnapsToDevicePixels}"/>
							</Grid>
						</ScrollViewer>
					</Border>
				</Themes:SystemDropShadowChrome>
			</Popup>
			<ToggleButton x:Name="toggleButton"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  Background="{TemplateBinding Background}"
						  Grid.ColumnSpan="2"
						  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay,
							RelativeSource={RelativeSource TemplatedParent}}" 
						  Style="{StaticResource ComboBoxToggleButton}"/>
			<ContentPresenter x:Name="contentPresenter" 
							  ContentTemplate="{TemplateBinding 
								SelectionBoxItemTemplate}" 
							  ContentTemplateSelector="{TemplateBinding 
								ItemTemplateSelector}"
							  Content="{TemplateBinding SelectionBoxItem}" 
							  ContentStringFormat="{TemplateBinding
								SelectionBoxItemStringFormat}"
							  HorizontalAlignment="{TemplateBinding 
								HorizontalContentAlignment}"
							  IsHitTestVisible="false" 
							  Margin="{TemplateBinding Padding}"
							  SnapsToDevicePixels="{TemplateBinding 
								SnapsToDevicePixels}" 
							  VerticalAlignment="{TemplateBinding 
								VerticalContentAlignment}"
							  />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsOpen" SourceName="PART_Popup" Value="true">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation 
											Storyboard.TargetName="dropDownBorder"
											Storyboard.TargetProperty=
											"Height"
											From="0"
											To="70" 
											Duration="0:0:0:.5"/>

						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation 
											Storyboard.TargetName="dropDownBorder"
											Storyboard.TargetProperty=
											"Height"
											
											To="0" 
											Duration="0:0:0:.1"/>

						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>

			</Trigger>
			<Trigger Property="HasDropShadow"
					 SourceName="PART_Popup" 
					 Value="true">
				<Setter Property="Margin" 
						TargetName="shadow"
						Value="0,0,5,5"/>
				<Setter Property="Color" 
						TargetName="shadow"
						Value="#71000000"/>
			</Trigger>
			<Trigger Property="HasItems" 
					 Value="false">
				<Setter Property="Height" 
						TargetName="dropDownBorder" 
						Value="95"/>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsGrouping"
							   Value="true"/>
					<Condition 
						Property=
						"VirtualizingPanel.IsVirtualizingWhenGrouping"
						Value="false"/>
				</MultiTrigger.Conditions>
				<Setter Property="ScrollViewer.CanContentScroll"
						Value="false"/>
			</MultiTrigger>
			<Trigger Property="ScrollViewer.CanContentScroll"
					 SourceName="DropDownScrollViewer" 
					 Value="false">
				<Setter Property="Canvas.Top" 
						TargetName="opaqueRect" 
						Value="{Binding VerticalOffset, 
					ElementName=DropDownScrollViewer}"/>
				<Setter Property="Canvas.Left"
						TargetName="opaqueRect" 
						Value="{Binding HorizontalOffset,
						ElementName=DropDownScrollViewer}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
		<Setter Property='Margin'
            Value='30,10' />
		<Setter Property='FontFamily'
            Value='hermit' />
		<Setter Property='Height'
            Value='25' />
		<Setter Property='VerticalAlignment'
            Value='Center' />
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		
		<Setter Property="FocusVisualStyle" 
				Value="{StaticResource FocusVisual}"/>
		<Setter Property="Background" 
				Value="{StaticResource ComboBox.Static.Background}"/>
		<Setter Property="BorderBrush" 
				Value="{StaticResource ComboBox.Static.Border}"/>
		<Setter Property="Foreground" 
				Value="White"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" 
				Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" 
				Value="Auto"/>
		<Setter Property="Padding" Value="6,3,5,3"/>
		<Setter Property="ScrollViewer.CanContentScroll" 
				Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" 
				Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" 
				Value="False"/>
		<Setter Property="Template" 
				Value="{StaticResource ComboBoxTemplate}"/>
		<Style.Triggers>
			<Trigger Property="IsEditable" 
					 Value="true">
				<Setter Property="IsTabStop"
						Value="false"/>
				<Setter Property="Padding"
						Value="2"/>
				<Setter Property="Template" 
						Value="{StaticResource ComboBoxEditableTemplate}"/>
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>